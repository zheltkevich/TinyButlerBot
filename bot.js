const { Telegraf } = require('telegraf');
const bot = new Telegraf('');//—Å—é–¥–∞ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª botFather

bot.command('start', async(ctx) => {
    let greetingsMessage = `üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, ${ctx.message.from.first_name}!
ü§ó –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞–π—è. –Ø –ª–∏—á–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–∞—Ä—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞. –û–Ω –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ —É–∂–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ–±–æ –º–Ω–µ.

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? ;)`;

    await bot.telegram.sendSticker(ctx.chat.id, 'CAACAgEAAxkBAAIBImJa6-xQ-JCqVYyA19qygLL1DqHTAALoCQACv4yQBOuM7gkYub23JAQ');
    bot.telegram.sendMessage(ctx.chat.id, greetingsMessage, {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
                        callback_data: 'getGreetingsCommands',
                    },

                ],
            ],
        },
    });
});
bot.action('help', (ctx) => {
    // bot.telegram.sendPhoto(ctx.chat.id, {
    //     source: "http://placekitten.com/g/200/300",
    // });
    bot.telegram.sendMessage(ctx.chat.id, 'HELP');
});

bot.command('help', (ctx) => {
    bot.telegram.sendMessage(ctx.chat.id, '–†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', {
    });
});

bot.action('getGreetingsCommands', (ctx) => {
    // bot.telegram.sendPhoto(ctx.chat.id, {
    //     source: "http://placekitten.com/g/200/300",
    // });
    bot.telegram.sendMessage(ctx.chat.id, 'DOG');
});



//method that displays the inline keyboard buttons 

bot.hears('animals', (ctx) => {
    const animalMessage = `great, here are pictures of animals you would love`;
    ctx.deleteMessage();
    bot.telegram.sendMessage(ctx.chat.id, animalMessage, {
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "dog",
                        callback_data: 'dog'
                    },
                    {
                        text: "cat",
                        callback_data: 'cat'
                    }
                ],

            ]
        }
    })
})

bot.action('dog', ctx => {
    // bot.telegram.sendPhoto(ctx.chat.id, {
    //     source: "http://placekitten.com/g/200/300",
    // });
    bot.telegram.sendMessage(ctx.chat.id, 'DOG');
});

bot.action('cat', ctx => {
    // bot.telegram.sendPhoto(ctx.chat.id, {
    //     source: "http://placekitten.com/g/200/300",
    // });
    bot.telegram.sendMessage(ctx.chat.id, 'CAT');
});

// ========================================================
const requestPhoneKeyboard = {
    "reply_markup": {
        "one_time_keyboard": true,
        "keyboard": [
            [{
                text: "My phone number",
                request_contact: true,
                one_time_keyboard: true
            }],
            ["Cancel"]
        ]
    }
};
const requestLocationKeyboard = {
    "reply_markup": {
        "one_time_keyboard": true,
        "keyboard": [
            [{
                text: "My location",
                request_location: true,
                one_time_keyboard: true
            }],
            ["Cancel"]
        ]
    }
};

bot.hears('phone', (ctx, next) => {
    bot.telegram.sendMessage(ctx.chat.id, 'Can we get access to your phone number?', requestPhoneKeyboard);
});

bot.hears("location", (ctx) => {
    bot.telegram.sendMessage(ctx.chat.id, 'Can we access your location?', requestLocationKeyboard);
});

bot.on('sticker', (ctx) => {
    console.log(ctx.message.sticker);
});
bot.on('text', (ctx) => {
    console.log(ctx.message);
});

// bot.on('text', (ctx) => {
//     ctx.reply(`id: ${ctx.message.from.id}`);
//     ctx.reply(`username: ${ctx.message.from.username}`);
//     ctx.reply(`first_name: ${ctx.message.from.first_name}`);
//     ctx.reply(`is_bot: ${ctx.message.from.is_bot}`);
//     ctx.reply(`language_code: ${ctx.message.from.language_code}`);
//     console.log('ctx.from: ', ctx.from);

//     console.log(ctx);
// });
// bot.on('sticker', (ctx) => ctx.reply('–ù–∞—Ö—É–π –º–Ω–µ —Ç–≤–æ–π —Å—Ç–∏–∫–µ—Ä?')) //bot.on —ç—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —é–∑–µ—Ä–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–Ω –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å—Ç–∏–∫–µ—Ä, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
// bot.hears('hi', (ctx) => ctx.reply('Hey there')) // bot.hears —ç—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ - "hi"
// bot.hears('hui', (ctx) => ctx.reply('Poshel na hui!'))
bot.launch() // –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞